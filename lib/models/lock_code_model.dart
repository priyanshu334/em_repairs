class LockCodeModel {
  final String? id; // Nullable 'id', can be generated by Appwrite if not provided
  final List<int> lockCode; // Stores the lock code as a list of integers
  final String? patternCode; // Stores the pattern lock code as a string (nullable)

  LockCodeModel({
    this.id, // 'id' is now nullable
    required this.lockCode,
    this.patternCode,
  });

  // Factory constructor to create an instance from a Map (e.g., for database storage)
  factory LockCodeModel.fromMap(Map<String, dynamic> map) {
    return LockCodeModel(
      id: map['id'], // 'id' can be null in the map
      lockCode: List<int>.from(map['lockCode'] ?? []),
      patternCode: map['patternCode'],
    );
  }

  // Converts the instance to a Map for saving to database or other storage
  Map<String, dynamic> toMap() {
    return {
      'id': id, // Include 'id' in the map (it can be null)
      'lockCode': lockCode,
      'patternCode': patternCode,
    };
  }

  @override
  String toString() {
    return 'LockCodeModel(id: $id, lockCode: $lockCode, patternCode: $patternCode)';
  }

  // CopyWith method for easier updates
  LockCodeModel copyWith({
    String? id,
    List<int>? lockCode,
    String? patternCode,
  }) {
    return LockCodeModel(
      id: id ?? this.id,
      lockCode: lockCode ?? this.lockCode,
      patternCode: patternCode ?? this.patternCode,
    );
  }
}
